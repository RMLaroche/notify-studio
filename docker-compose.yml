version: '3.8'

services:
  # Platform Backend
  backend:
    build:
      context: .
      dockerfile: docker/backend.Dockerfile
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - FRONTEND_URL=http://localhost:3000
      - DATABASE_PATH=/app/data/notify-studio.db
      - MESSAGE_RETENTION_DAYS=7
    volumes:
      - backend_data:/app/data
    networks:
      - notify-studio
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Platform Frontend
  frontend:
    build:
      context: .
      dockerfile: docker/frontend.Dockerfile
    ports:
      - "3000:80"
    environment:
      - REACT_APP_BACKEND_URL=http://localhost:3001
      - REACT_APP_WS_URL=http://localhost:3001
    networks:
      - notify-studio
    restart: unless-stopped
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Discord Module (optional)
  discord-module:
    build:
      context: .
      dockerfile: docker/discord.Dockerfile
    environment:
      - NODE_ENV=production
      - PLATFORM_URL=http://backend:3001
      - MODULE_TOKEN=discord-module-token
      - DISCORD_BOT_TOKEN=${DISCORD_BOT_TOKEN}
      - DISCORD_DEFAULT_CHANNEL=${DISCORD_DEFAULT_CHANNEL}
      - DISCORD_ALERTS_CHANNEL=${DISCORD_ALERTS_CHANNEL:-}
      - DISCORD_LOGS_CHANNEL=${DISCORD_LOGS_CHANNEL:-}
      - DISCORD_ERRORS_CHANNEL=${DISCORD_ERRORS_CHANNEL:-}
      - DISCORD_GUILD_ID=${DISCORD_GUILD_ID:-}
    networks:
      - notify-studio
    restart: unless-stopped
    depends_on:
      - backend
    profiles:
      - discord

volumes:
  backend_data:
    driver: local

networks:
  notify-studio:
    driver: bridge